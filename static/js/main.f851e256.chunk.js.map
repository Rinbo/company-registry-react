{"version":3,"sources":["components/CreateCompany.js","components/CompanyList.js","components/EmployeeList.js","containers/ListContainer.js","components/CreatePerson.js","components/PeopleTable.js","components/PeopleList.js","components/CrAppBar.js","containers/FormsContainer.js","App.js","serviceWorker.js","index.js"],"names":["CreateCompany","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleCompanySave","companyNameElement","document","getElementById","props","onCompanySave","value","inherits","createClass","key","react_default","a","createElement","index_es","container","direction","item","lg","variant","className","label","placeholder","id","margin","color","onClick","Component","CompanyList","handleCompanySelect","company","onCompanySelect","bind","assertThisInitialized","_this2","listCompanies","companies","map","button","Business_default","primary","EmployeeList","handlePersonDelete","person","onPersonDelete","handleViewSelect","onViewSelect","employeeList","people","name","Person_default","aria-label","Delete_default","style","paddingLeft","dense","ListContainer","setState","view","state","CompanyList_CompanyList","EmployeeList_EmployeeList","CreatePerson","handlePersonSave","personNameElement","personCompanyElement","onPersonSave","handleChange","e","preventDefault","onCompanyChange","companyList","htmlFor","companyInput","onChange","inputProps","PeopleTable","row","component","scope","PeopleList","PeopleTable_PeopleTable","CrAppBar","position","title","FormsContainer","handleCompanyInput","target","toConsumableArray","newPeopleEntry","peopleArray","componentWillMount","localStorage","getItem","JSON","parse","componentWillUpdate","nextProps","nextState","setItem","stringify","CrAppBar_CrAppBar","CreateCompany_CreateCompany","ListContainer_ListContainer","CreatePerson_CreatePerson","PeopleList_PeopleList","App","containers_FormsContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wSAGaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEQ,kBAAoB,WAClB,IAAMC,EAAqBC,SAASC,eAAe,gBACnDlB,EAAKmB,MAAMC,cAAcJ,EAAmBK,OAC5CL,EAAmBK,MAAM,IAL7BrB,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAAJ,EAAAC,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAJ,EAAA,EAAA2B,IAAA,SAAAH,MAAA,WASI,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GAACP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYK,QAAQ,WAAWC,UAAU,cAAzC,gBACdT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GAACP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWO,MAAM,qBAAqBC,YAAY,eAAeC,GAAG,eAAeC,OAAO,YACxGb,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GAACP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQK,QAAQ,YAAYM,MAAM,UAAUL,UAAU,oBAAoBM,QAASrC,KAAKY,mBAAxF,eAdxBlB,EAAA,CAAmC4C,+BCCtBC,EAAb,SAAA5C,GAEE,SAAA4C,EAAYvB,GAAO,IAAAnB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjB1C,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAyC,GAAA9B,KAAAT,KAAMgB,KAIRwB,oBAAsB,SAAAC,GACpB5C,EAAKmB,MAAM0B,gBAAgBD,IAJ3B5C,EAAK2C,oBAAsB3C,EAAK2C,oBAAoBG,KAAzB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAFVA,EAFrB,OAAAC,OAAAqB,EAAA,EAAArB,CAAAyC,EAAA5C,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAyC,EAAA,EAAAlB,IAAA,SAAAH,MAAA,WAWW,IAAA2B,EAAA7C,KAED8C,EAAgB9C,KAAKgB,MAAM+B,UAAUC,IAAI,SAACP,GAC9C,OACEnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUJ,IAAKoB,EAASQ,QAAM,EAACZ,QAAS,kBAAMQ,EAAKL,oBAAoBC,KACrEnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,OAEFD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAc0B,QAASV,OAK7B,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYK,QAAQ,YAApB,aACAR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMM,UAAU,mBAAmBe,QA3B3CP,EAAA,CAAiCD,iDCCpBc,EAAb,SAAAzD,GAEE,SAAAyD,EAAYpC,GAAO,IAAAnB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAoD,IACjBvD,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAsD,GAAA3C,KAAAT,KAAMgB,KAKRqC,mBAAqB,SAAAC,GACnBA,EAAOb,QAAU,GACjB5C,EAAKmB,MAAMuC,eAAeD,IARTzD,EAWnB2D,iBAAmB,WACjB3D,EAAKmB,MAAMyC,gBAVX5D,EAAKwD,mBAAqBxD,EAAKwD,mBAAmBV,KAAxB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAC1BA,EAAK2D,iBAAmB3D,EAAK2D,iBAAiBb,KAAtB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAHPA,EAFrB,OAAAC,OAAAqB,EAAA,EAAArB,CAAAsD,EAAAzD,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAsD,EAAA,EAAA/B,IAAA,SAAAH,MAAA,WAiBW,IAAA2B,EAAA7C,KAEDyC,EAAUzC,KAAKgB,MAAMyB,QACrBiB,EAAe1D,KAAKgB,MAAM2C,OAAOX,IAAI,SAACM,GAC1C,OAAIA,EAAOb,UAAYA,EAEnBnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUJ,IAAK,WAAaiC,EAAOM,MACjCtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,OAEFD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAc0B,QAASG,EAAOM,OAC9BtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYqC,aAAW,SAASzB,QAAS,kBAAMQ,EAAKQ,mBAAmBC,KACrEhC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,SAKK,KAGjB,OACID,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYK,QAAQ,YAApB,gBAA6CW,GAC7CnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMuC,MAAO,CAACC,YAAa,IAAKC,OAAO,EAAMhC,GAAG,iBAAiBwB,GACjEpC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQK,QAAQ,YAAYM,MAAM,UAAUC,QAASrC,KAAKwD,kBAA1D,aA1CVJ,EAAA,CAAkCd,aCDrB6B,EAAb,SAAAxE,GAEE,SAAAwE,EAAYnD,GAAO,IAAAnB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACjBtE,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAqE,GAAA1D,KAAAT,KAAMgB,KASRwB,oBAAsB,SAAAC,GACpB5C,EAAKuE,SAAS,CAAE3B,QAASA,EAAS4B,KAAM,KAXvBxE,EAcnB2D,iBAAmB,WACjB3D,EAAKuE,SAAS,CAACC,KAAM,KAbrBxE,EAAK2C,oBAAsB3C,EAAK2C,oBAAoBG,KAAzB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAC3BA,EAAK2D,iBAAmB3D,EAAK2D,iBAAiBb,KAAtB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KACxBA,EAAKyE,MAAQ,CACXD,KAAM,EACN5B,QAAS,IANM5C,EAFrB,OAAAC,OAAAqB,EAAA,EAAArB,CAAAqE,EAAAxE,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAqE,EAAA,EAAA9C,IAAA,SAAAH,MAAA,WAqBI,OAAwB,IAApBlB,KAAKsE,MAAMD,KACN/C,EAAAC,EAAAC,cAAC+C,EAAD,CAAaxB,UAAW/C,KAAKgB,MAAM+B,UAAWL,gBAAiB1C,KAAKwC,sBAEpElB,EAAAC,EAAAC,cAACgD,EAAD,CACL/B,QAASzC,KAAKsE,MAAM7B,QACpBkB,OAAQ3D,KAAKgB,MAAM2C,OACnBF,aAAczD,KAAKwD,iBACnBD,eAAiBvD,KAAKgB,MAAMuC,qBA5BpCY,EAAA,CAAmC7B,aCDtBmC,EAAb,SAAA9E,GAAA,SAAA8E,IAAA,IAAA7E,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyE,GAAA,QAAAxE,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAA2E,IAAAhE,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MAEEsE,iBAAmB,WACjB,IAAMC,EAAoB7D,SAASC,eAAe,eAC5C6D,EAAuB9D,SAASC,eAAe,kBACrDlB,EAAKmB,MAAM6D,aAAa,CACtBjB,KAAMe,EAAkBzD,MACxBuB,QAASmC,EAAqB1D,QAEhCyD,EAAkBzD,MAAM,IAT5BrB,EAYEiF,aAAe,SAAAC,GACbA,EAAEC,iBACFnF,EAAKmB,MAAMiE,gBAAgBF,IAd/BlF,EAAA,OAAAC,OAAAqB,EAAA,EAAArB,CAAA2E,EAAA9E,GAAAG,OAAAsB,EAAA,EAAAtB,CAAA2E,EAAA,EAAApD,IAAA,SAAAH,MAAA,WAmBI,IAAMgE,EAAclF,KAAKgB,MAAM+B,UAAUC,IAAI,SAACP,GAC5C,OAAOnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUP,MAAOuB,EAASpB,IAAKoB,GAAUA,KAIlD,OACEnB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYK,QAAQ,WAAWC,UAAU,cAAzC,cACAT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GAACP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWO,MAAM,uBAAuBC,YAAY,OAAOE,OAAO,SAASD,GAAG,iBAC5FZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACXP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY0D,QAAQ,kBAApB,kBACA7D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,UAAU,cACVb,MAAOlB,KAAKgB,MAAMoE,aAClBC,SAAUrF,KAAK8E,aACfQ,WAAY,CACV7C,QAAS,UACTP,GAAI,mBAGNZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUP,MAAM,IACdI,EAAAC,EAAAC,cAAA,mBAED0D,KAIP5D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GAACP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQW,MAAM,UAAUN,QAAQ,YAAYO,QAASrC,KAAK0E,kBAA1D,eAhDxBD,EAAA,CAAkCnC,aCAbiD,mLAGjB,OACEjE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,kBAGJH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGzB,KAAKgB,MAAM2C,OAAOX,IAAI,SAAAwC,GACrB,OACElE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUJ,IAAKmE,EAAI5B,MACjBtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWgE,UAAU,KAAKC,MAAM,OAC7BF,EAAI5B,MAEPtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAAY+D,EAAI/C,qBAlBSH,aCC5BqD,EAAb,SAAAhG,GAAA,SAAAgG,IAAA,OAAA7F,OAAAC,EAAA,EAAAD,CAAAE,KAAA2F,GAAA7F,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA6F,GAAAjF,MAAAV,KAAAE,YAAA,OAAAJ,OAAAqB,EAAA,EAAArB,CAAA6F,EAAAhG,GAAAG,OAAAsB,EAAA,EAAAtB,CAAA6F,EAAA,EAAAtE,IAAA,SAAAH,MAAA,WAGI,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,UACxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,EAACE,UAAU,cAAaT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYK,QAAQ,WAAWC,UAAU,cAAzC,mBACrCT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GAACP,EAAAC,EAAAC,cAACoE,EAAD,CAAajC,OAAQ3D,KAAKgB,MAAM2C,gBAPxDgC,EAAA,CAAgCrD,aCDnBuD,EAAb,SAAAlG,GAAA,SAAAkG,IAAA,OAAA/F,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,GAAA/F,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA+F,GAAAnF,MAAAV,KAAAE,YAAA,OAAAJ,OAAAqB,EAAA,EAAArB,CAAA+F,EAAAlG,GAAAG,OAAAsB,EAAA,EAAAtB,CAAA+F,EAAA,EAAAxE,IAAA,SAAAH,MAAA,WAEI,OACEI,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQqE,SAAS,SAAS1D,MAAM,WAChCd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYK,QAAQ,KAAKM,MAAM,WAC5BpC,KAAKgB,MAAM+E,aANtBF,EAAA,CAA8BvD,aCmFf0D,EA9Ef,SAAArG,GACE,SAAAqG,EAAYhF,GAAO,IAAAnB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgG,IACjBnG,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAAkG,GAAAvF,KAAAT,KAAMgB,KAeRiF,mBAAqB,SAAAlB,GACnBlF,EAAKuE,SAAS,CAACgB,aAAcL,EAAEmB,OAAOhF,SAjBrBrB,EAoBnBe,kBAAoB,SAAAmE,GAClBlF,EAAKuE,SAAS,CAAErB,UAAUjD,OAAAqG,EAAA,EAAArG,CAAKD,EAAKyE,MAAMvB,WAAjBpC,OAAA,CAA4BoE,OArBpClF,EAyBnB6E,iBAAmB,SAAA0B,GACjBvG,EAAKuE,SAAS,CAAET,OAAO7D,OAAAqG,EAAA,EAAArG,CAAKD,EAAKyE,MAAMX,QAAjBhD,OAAA,CAAyByF,IAAiBhB,aAAc,MA1B7DvF,EA6BnBwD,mBAAqB,SAAAC,GACnB,IAAI+C,EAAcxG,EAAKyE,MAAMX,OAC7B0C,EAAYrD,IAAK,SAAA+B,GACf,OAAIA,IAAMzB,GACRyB,EAAEtC,QAAU,GACLsC,GAEAA,IAGXlF,EAAKuE,SAAS,CAACT,OAAQ0C,KAvCNxG,EA0CnByG,mBAAqB,WACnBC,aAAaC,QAAQ,eAAiB3G,EAAKuE,SAAS,CAClDT,OAAQ8C,KAAKC,MAAMH,aAAaC,QAAQ,eAAe7C,OACvDZ,UAAW0D,KAAKC,MAAMH,aAAaC,QAAQ,eAAezD,aA7C3ClD,EAkDnB8G,oBAAsB,SAACC,EAAWC,GAChCN,aAAaO,QAAQ,aAAcL,KAAKM,UAAUF,KAjDlDhH,EAAKyE,MAAQ,CACXX,OAAQ,CACN,CAACC,KAAM,qBAAmBnB,QAAS,SACnC,CAACmB,KAAM,sBAAoBnB,QAAS,SAEtCM,UAAW,CAAC,QAAS,QACrBqC,aAAc,IAEhBvF,EAAKoG,mBAAqBpG,EAAKoG,mBAAmBtD,KAAxB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAC1BA,EAAKe,kBAAoBf,EAAKe,kBAAkB+B,KAAvB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KACzBA,EAAK6E,iBAAmB7E,EAAK6E,iBAAiB/B,KAAtB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KACxBA,EAAKwD,mBAAqBxD,EAAKwD,mBAAmBV,KAAxB7C,OAAA8C,EAAA,EAAA9C,QAAA8C,EAAA,EAAA9C,CAAAD,KAbTA,EADrB,OAAAC,OAAAqB,EAAA,EAAArB,CAAAkG,EAAArG,GAAAG,OAAAsB,EAAA,EAAAtB,CAAAkG,EAAA,EAAA3E,IAAA,SAAAH,MAAA,WAwDI,OACEI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwF,EAAD,CAAUjB,MAAM,qBAChBzE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOM,UAAU,kBACfT,EAAAC,EAAAC,cAACyF,EAAD,CAAehG,cAAejB,KAAKY,oBACnCU,EAAAC,EAAAC,cAAC0F,EAAD,CACEnE,UAAW/C,KAAKsE,MAAMvB,UACtBY,OAAQ3D,KAAKsE,MAAMX,OACnBJ,eAAgBvD,KAAKqD,sBAEzB/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOM,UAAU,kBACfT,EAAAC,EAAAC,cAAC2F,EAAD,CAActC,aAAc7E,KAAK0E,iBAC/B3B,UAAW/C,KAAKsE,MAAMvB,UACtBkC,gBAAiBjF,KAAKiG,mBACtBb,aAAcpF,KAAKsE,MAAMc,eAC3B9D,EAAAC,EAAAC,cAAC4F,EAAD,CAAYzD,OAAQ3D,KAAKsE,MAAMX,eAvEzCqC,EAAA,CAAoC1D,aCOrB+E,mLARX,OACE/F,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAAC8F,EAAD,cAJUhF,aCOEiF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAAShH,SAASC,eAAe,SD2H3C,kBAAmBgH,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.f851e256.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Typography, Grid, Button, TextField} from '@material-ui/core/'\n\nexport class CreateCompany extends Component {\n\n  handleCompanySave = () =>{\n    const companyNameElement = document.getElementById('company-name')\n    this.props.onCompanySave(companyNameElement.value)\n    companyNameElement.value=\"\"\n  }\n\n  render() {\n    return (\n      <div>\n        <Grid container direction=\"column\">\n          <Grid item lg><Typography variant=\"headline\" className=\"cr-heading\">Add Company</Typography></Grid>\n          <Grid item lg><TextField label=\"Enter Company Name\" placeholder=\"Company Name\" id=\"company-name\" margin=\"normal\" /></Grid>\n          <Grid item lg><Button variant=\"contained\" color=\"primary\" className=\"cr-button-primary\" onClick={this.handleCompanySave}>Save</Button></Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\n\nexport default CreateCompany\n","import React, { Component } from 'react'\nimport { Typography, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport BusinessIcon from '@material-ui/icons/Business'\n\nexport class CompanyList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleCompanySelect = this.handleCompanySelect.bind(this)\n  }\n\n  handleCompanySelect = company => {\n    this.props.onCompanySelect(company)\n  }\n\n  render() {\n\n    const listCompanies = this.props.companies.map((company) => {\n      return (\n        <ListItem key={company} button onClick={() => this.handleCompanySelect(company)}>\n          <ListItemIcon>\n            <BusinessIcon />\n          </ListItemIcon>\n          <ListItemText primary={company} />\n        </ListItem>\n      )\n    })\n\n    return (\n      <div>\n        <Typography variant=\"headline\">Companies</Typography>\n        <List className=\"cr-company-list\">{listCompanies}</List>\n      </div>\n    )\n  }\n}\n\nexport default CompanyList\n","import React, { Component } from 'react'\nimport { Typography, List, ListItem, ListItemIcon, ListItemText, IconButton, ListItemSecondaryAction, Button } from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport class EmployeeList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handlePersonDelete = this.handlePersonDelete.bind(this)\n    this.handleViewSelect = this.handleViewSelect.bind(this)\n  }\n\n  handlePersonDelete = person => {\n    person.company = \"\"\n    this.props.onPersonDelete(person)\n  }\n\n  handleViewSelect = () => {\n    this.props.onViewSelect()\n  }\n \n  render() {\n    \n    const company = this.props.company\n    const employeeList = this.props.people.map((person) => {\n      if (person.company === company) {\n        return (              \n          <ListItem key={'company-' + person.name}>\n            <ListItemIcon>\n              <PersonIcon  />\n            </ListItemIcon>\n            <ListItemText primary={person.name}/>\n            <ListItemSecondaryAction>                                    \n              <IconButton aria-label=\"Delete\" onClick={() => this.handlePersonDelete(person)}>\n                <DeleteIcon  />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        )\n      } else {return \"\"}\n    })\n\n    return (      \n        <div>\n          <Typography variant=\"headline\">Employees of {company}</Typography>\n          <List style={{paddingLeft: 50}} dense={true} id=\"employee-list\">{employeeList}</List>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleViewSelect}>Back</Button>\n        </div>      \n    )\n  }\n}\n\nexport default EmployeeList\n","import React, { Component } from 'react'\nimport {CompanyList} from '../components/CompanyList'\nimport {EmployeeList} from '../components/EmployeeList'\n\nexport class ListContainer extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleCompanySelect = this.handleCompanySelect.bind(this)\n    this.handleViewSelect = this.handleViewSelect.bind(this)\n    this.state = {\n      view: 0,\n      company: \"\"\n    }\n  }\n\n  handleCompanySelect = company => {\n    this.setState({ company: company, view: 1 })\n  };\n\n  handleViewSelect = () => {    \n    this.setState({view: 0})\n  }\n\n  render() {\n    if (this.state.view === 0) {\n      return <CompanyList companies={this.props.companies} onCompanySelect={this.handleCompanySelect} />\n    } else {\n      return <EmployeeList \n        company={this.state.company} \n        people={this.props.people} \n        onViewSelect={this.handleViewSelect}\n        onPersonDelete={ this.props.onPersonDelete } />\n    }\n  }\n}\n\nexport default ListContainer\n","import React, { Component } from 'react'\nimport {Typography, Grid, Select, FormControl, InputLabel, MenuItem, TextField, Button} from '@material-ui/core'\n\nexport class CreatePerson extends Component {\n\n  handlePersonSave = () => {\n    const personNameElement = document.getElementById('person-name')\n    const personCompanyElement = document.getElementById('person-company')\n    this.props.onPersonSave({\n      name: personNameElement.value, \n      company: personCompanyElement.value\n    })\n    personNameElement.value=\"\"\n  }\n\n  handleChange = e => {\n    e.preventDefault()\n    this.props.onCompanyChange(e)\n  };\n\n  render() {\n\n    const companyList = this.props.companies.map((company) => {\n      return <MenuItem value={company} key={company}>{company}</MenuItem>\n    })\n\n    \n    return (\n      <div>\n        <Typography variant=\"headline\" className=\"cr-heading\">Add people</Typography>\n        <Grid container direction=\"column\">\n          <Grid item lg><TextField label=\"Enter Name of Person\" placeholder=\"Name\" margin=\"normal\" id=\"person-name\" /></Grid>   \n          <Grid item lg>            \n            <FormControl>              \n              <InputLabel htmlFor=\"person-company\">Select Company</InputLabel>\n              <Select \n                className=\"cr-dropdown\"\n                value={this.props.companyInput}\n                onChange={this.handleChange}           \n                inputProps={{\n                  company: 'company',\n                  id: 'person-company',\n                }}\n                >\n                <MenuItem value=\"\">\n                  <em>None</em>\n                </MenuItem>\n                {companyList}\n              </Select>\n            </FormControl>\n          </Grid> \n          <Grid item lg><Button color=\"primary\" variant=\"contained\" onClick={this.handlePersonSave}>Save</Button></Grid>           \n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default CreatePerson\n","import React, { Component } from 'react'\nimport {Table, TableHead, TableCell, TableBody, TableRow} from '@material-ui/core'\n\nexport default class PeopleTable extends Component {\n  render() {\n\n    return (\n      <Table >\n        <TableHead>\n          <TableRow>\n            <TableCell>Person</TableCell>\n            <TableCell>Company</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.props.people.map(row => {\n            return (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell>{row.company}</TableCell>\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>    \n      )\n  }\n}\n","import React, { Component } from 'react'\nimport { Typography, Grid } from '@material-ui/core'\nimport PeopleTable from './PeopleTable'\n\nexport class PeopleList extends Component {\n  render() {\n\n    return (\n      <div>\n        <Grid container direction=\"column\">\n          <Grid item lg className=\"cr-heading\"><Typography variant=\"headline\" className=\"cr-heading\">List of people</Typography></Grid>\n          <Grid item lg><PeopleTable people={this.props.people} /></Grid>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default PeopleList\n","import React, { Component } from 'react'\nimport { Typography, AppBar, Toolbar} from '@material-ui/core'\n\nexport class CrAppBar extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n      <Toolbar>\n        <Typography variant=\"h5\" color=\"inherit\">\n          {this.props.title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    )\n  }\n}\n\nexport default CrAppBar","import React, { Component } from 'react'\nimport { CreateCompany } from '../components/CreateCompany'\nimport { ListContainer } from './ListContainer'\nimport { CreatePerson } from '../components/CreatePerson'\nimport { PeopleList } from '../components/PeopleList'\nimport { CrAppBar } from '../components/CrAppBar'\nimport { Paper } from '@material-ui/core'\n\nexport class FormsContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      people: [\n        {name: \"Robin Börjesson\", company: \"Volvo\" },\n        {name: \"Sixten Börjesson\", company: \"Saab\" }\n      ],\n      companies: [\"Volvo\", \"Saab\"],\n      companyInput: \"\"\n    }\n    this.handleCompanyInput = this.handleCompanyInput.bind(this)\n    this.handleCompanySave = this.handleCompanySave.bind(this)\n    this.handlePersonSave = this.handlePersonSave.bind(this)\n    this.handlePersonDelete = this.handlePersonDelete.bind(this)\n  }\n\n  handleCompanyInput = e => {\n    this.setState({companyInput: e.target.value})\n  }\n\n  handleCompanySave = e => {\n    this.setState({ companies: [...this.state.companies, e] })\n\n  }\n\n  handlePersonSave = newPeopleEntry => {\n    this.setState({ people: [...this.state.people, newPeopleEntry], companyInput: \"\"  })\n  }\n\n  handlePersonDelete = person => {\n    let peopleArray = this.state.people\n    peopleArray.map( e => {\n      if (e === person) {\n        e.company = \"\"\n        return e\n      } else {\n        return e\n      }\n    })\n    this.setState({people: peopleArray})\n  }\n\n  componentWillMount = () => {\n    localStorage.getItem('savedState') && this.setState({\n      people: JSON.parse(localStorage.getItem('savedState')).people,\n      companies: JSON.parse(localStorage.getItem('savedState')).companies\n    })\n  }\n  \n\n  componentWillUpdate = (nextProps, nextState) => {\n    localStorage.setItem('savedState', JSON.stringify(nextState))    \n  }\n      \n  render() {\n    return (\n      <div >\n        <CrAppBar title=\"Company Registry\"/>\n        <Paper className=\"grid-container\">\n          <CreateCompany onCompanySave={this.handleCompanySave} />\n          <ListContainer \n            companies={this.state.companies} \n            people={this.state.people} \n            onPersonDelete={this.handlePersonDelete}/>\n        </Paper>\n        <Paper className=\"grid-container\">\n          <CreatePerson onPersonSave={this.handlePersonSave} \n            companies={this.state.companies} \n            onCompanyChange={this.handleCompanyInput} \n            companyInput={this.state.companyInput} />\n          <PeopleList people={this.state.people}/>\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default FormsContainer\n","import React, { Component } from 'react';\nimport './App.css';\nimport FormsContainer from './containers/FormsContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FormsContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}