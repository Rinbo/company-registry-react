{"version":3,"sources":["components/CompanyList.js","components/EmployeeList.js","containers/ListContainer.js","components/CompanyMenu.js","components/CreatePerson.js","components/PeopleMenu.js","components/ModifyPerson.js","containers/PersonContainer.js","components/PeopleTable.js","components/AssignmentList.js","components/PeopleList.js","components/CrAppBar.js","components/CreateCompany.js","components/ModifyCompany.js","containers/CompanyContainer.js","containers/FormsContainer.js","App.js","serviceWorker.js","index.js"],"names":["CompanyList","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCompanySelect","company","onCompanySelect","bind","assertThisInitialized","inherits","createClass","key","value","_this2","companyList","companies","map","react_default","a","createElement","index_es","button","onClick","Business_default","primary","variant","className","Component","EmployeeList","handleEmployeeDelete","person","onEmployeeDelete","handleViewSelect","onViewSelect","employeeList","people","name","Person_default","aria-label","Delete_default","style","paddingLeft","dense","id","color","ListContainer","setState","view","state","CompanyList_CompanyList","EmployeeList_EmployeeList","CompanyMenu","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","handleSelect","e","preventDefault","htmlFor","companySelect","onChange","inputProps","CreatePerson","handlePersonChange","target","handlePersonCreate","onPersonCreate","lib","ref","onSubmit","onError","errors","console","log","container","direction","item","lg","type","label","required","placeholder","margin","validators","errorMessages","components_CompanyMenu","PeopleMenu","onPersonSelect","personSelect","peopleList","ModifyPerson","handlePersonSelect","originalPerson","handlePersonEdit","onPersonEdit","originalName","handlePersonDelete","onPersonDelete","ValidatorForm","addValidationRule","components_PeopleMenu","marginRight","marginLeft","TabContainer","_ref","children","dir","component","padding","PersonContainer","handleChange","event","handleChangeIndex","index","indicatorColor","textColor","fullWidth","react_swipeable_views_lib_default","axis","onChangeIndex","components_CreatePerson","components_ModifyPerson","PeopleTable","row","scope","AssignmentList","handleCompanyAssign","onCompanyAssign","unAssignedPeople","filter","PeopleTable_PeopleTable","onCompanyChange","companyInput","PeopleList","assignedPeople","PeopleList_TabContainer","components_AssignmentList","CrAppBar","position","title","CreateCompany","handleCompanyChange","handleCompanyCreate","onCompanyCreate","ModifyCompany","originalCompany","handleCompanyEdit","onCompanyEdit","handleCompanyDelete","onCompanyDelete","CompanyContainer","CompanyContainer_TabContainer","components_CreateCompany","components_ModifyCompany","FormsContainer","toConsumableArray","newPeopleEntry","peopleArray","companyArray","componentWillMount","localStorage","getItem","JSON","parse","componentWillUpdate","nextProps","nextState","setItem","stringify","CrAppBar_CrAppBar","containers_CompanyContainer","ListContainer_ListContainer","PersonContainer_PersonContainer","PeopleList_PeopleList","App","containers_FormsContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.244833b7.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Typography, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport BusinessIcon from '@material-ui/icons/Business'\n\nexport class CompanyList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleCompanySelect = this.handleCompanySelect.bind(this)\n  }\n\n  handleCompanySelect = company => {\n    this.props.onCompanySelect(company)\n  }\n\n  render() {\n\n    const companyList = this.props.companies.map((company) => {\n      return (\n        <ListItem key={company} button onClick={() => this.handleCompanySelect(company)}>\n          <ListItemIcon>\n            <BusinessIcon />\n          </ListItemIcon>\n          <ListItemText primary={company} />\n        </ListItem>\n      )\n    })\n    \n    return (\n      <div>\n        <Typography variant=\"headline\">Companies</Typography>\n        <List className=\"cr-company-list\">{companyList}</List>\n      </div>\n    )\n  }\n}\n\nexport default CompanyList\n","import React, { Component } from 'react'\nimport { Typography, List, ListItem, ListItemIcon, ListItemText, IconButton, ListItemSecondaryAction, Button } from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nexport class EmployeeList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleEmployeeDelete = this.handleEmployeeDelete.bind(this)\n    this.handleViewSelect = this.handleViewSelect.bind(this)\n  }\n\n  handleEmployeeDelete = person => {\n    person.company = \"\"\n    this.props.onEmployeeDelete(person)\n  }\n\n  handleViewSelect = () => {\n    this.props.onViewSelect()\n  }\n \n  render() {\n    \n    const company = this.props.company\n    const employeeList = this.props.people.map((person) => {\n      if (person.company === company) {\n        return (              \n          <ListItem key={'company-' + person.name}>\n            <ListItemIcon>\n              <PersonIcon  />\n            </ListItemIcon>\n            <ListItemText primary={person.name}/>\n            <ListItemSecondaryAction>                                    \n              <IconButton aria-label=\"Delete\" onClick={() => this.handleEmployeeDelete(person)}>\n                <DeleteIcon  />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        )\n      } else {return \"\"}\n    })\n\n    return (      \n        <div>\n          <Typography variant=\"headline\">Employees of {company}</Typography>\n          <List style={{paddingLeft: 50}} dense={true} id=\"employee-list\">{employeeList}</List>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleViewSelect}>Back</Button>\n        </div>      \n    )\n  }\n}\n\nexport default EmployeeList\n","import React, { Component } from 'react'\nimport {CompanyList} from '../components/CompanyList'\nimport {EmployeeList} from '../components/EmployeeList'\n\nexport class ListContainer extends Component {\n\n  constructor(props) {\n    super(props)\n    this.handleCompanySelect = this.handleCompanySelect.bind(this)\n    this.handleViewSelect = this.handleViewSelect.bind(this)\n    this.state = {\n      view: 0,\n      company: \"\"\n    }\n  }\n\n  handleCompanySelect = company => {\n    this.setState({ company: company, view: 1 })\n  };\n\n  handleViewSelect = () => {    \n    this.setState({view: 0})\n  }\n\n  render() {\n    if (this.state.view === 0) {\n      return <CompanyList companies={this.props.companies} onCompanySelect={this.handleCompanySelect} />\n    } else {\n      return <EmployeeList \n        company={this.state.company} \n        people={this.props.people} \n        onViewSelect={this.handleViewSelect}\n        onEmployeeDelete={ this.props.onEmployeeDelete } />\n    }\n  }\n}\n\nexport default ListContainer\n","import React, { Component } from 'react'\nimport {Select, FormControl, InputLabel, MenuItem } from '@material-ui/core'\n\nexport class CompanyMenu extends Component {\n  \n  handleSelect = e => {\n    e.preventDefault()\n    this.props.onCompanySelect(e)\n  };\n  \n  render() {\n    return (\n      <FormControl>              \n        <InputLabel htmlFor=\"person-company\">Select Company</InputLabel>\n        <Select \n          className=\"cr-dropdown\"\n          value={this.props.companySelect}\n          onChange={this.handleSelect}           \n          inputProps={{\n            company: 'company',\n            id: 'person-company',\n          }}\n          >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.companyList}\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nexport default CompanyMenu\n","import React, { Component } from 'react'\nimport { Grid, Button} from '@material-ui/core'\nimport CompanyMenu from './CompanyMenu';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nexport class CreatePerson extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {      \n      company: \"\",\n      person: \"\"\n    }\n    this.handlePersonCreate = this.handlePersonCreate.bind(this)\n    this.handlePersonChange = this.handlePersonChange.bind(this)\n    this.handleCompanySelect = this.handleCompanySelect.bind(this)\n  } \n  \n  handlePersonChange = (e) => {\n    this.setState({person: e.target.value})\n  }\n\n  handleCompanySelect = (e) => {\n    this.setState({company: e.target.value})\n  }\n\n  handlePersonCreate = () => {    \n    this.props.onPersonCreate({name: this.state.person, company: this.state.company})\n    this.setState({person: \"\", company: \"\"})   \n  }\n\n  render() {\n    return (\n      <ValidatorForm                \n              ref=\"form\"\n              onSubmit={this.handlePersonCreate}\n              onError={errors => console.log(errors)} >\n        <Grid container direction=\"column\">\n          <Grid item lg>\n            <TextValidator\n              type=\"text\" \n              label=\"Enter Name of Person\"\n              name=\"person\"\n              required={true}\n              value={this.state.person} \n              placeholder=\"Name\" \n              margin=\"normal\" \n              onChange={this.handlePersonChange}\n              validators={['required']}\n              errorMessages={['this field is required']} />\n          </Grid>   \n          <Grid item lg>\n            <CompanyMenu \n              companyList={this.props.companyList} \n              onCompanySelect={this.handleCompanySelect} \n              companySelect={this.state.company}/>\n          </Grid> \n          <Grid item lg>\n            <Button\n              type=\"submit\" \n              color=\"primary\" \n              variant=\"contained\">\n              Create\n            </Button>\n          </Grid>           \n        </Grid>\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default CreatePerson\n","import React, { Component } from 'react'\nimport {Select, FormControl, InputLabel, MenuItem } from '@material-ui/core'\n\nexport class PeopleMenu extends Component {\n  \n  handleSelect = e => {\n    e.preventDefault()\n    this.props.onPersonSelect(e)\n  };\n  \n  render() {\n    return (\n      <FormControl>              \n        <InputLabel htmlFor=\"people-menu\">Select person to edit</InputLabel>\n        <Select \n          className=\"cr-dropdown\"\n          value={this.props.personSelect}\n          onChange={this.handleSelect}           \n          inputProps={{\n            people: 'people-menu',\n            id: 'people-menu',\n          }}\n          >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {this.props.peopleList}\n        </Select>\n      </FormControl>\n    )\n  }\n}\n\nexport default PeopleMenu\n","import React, { Component } from 'react'\nimport PeopleMenu from './PeopleMenu';\nimport { Grid, Button} from '@material-ui/core'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nexport class ModifyPerson extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {      \n      person: \"\",\n      originalPerson: \"\"\n    }\n    this.handlePersonEdit = this.handlePersonEdit.bind(this)\n    this.handlePersonChange = this.handlePersonChange.bind(this)\n    this.handlePersonDelete = this.handlePersonDelete.bind(this)\n    this.handlePersonSelect = this.handlePersonSelect.bind(this)\n  }\n\n  handlePersonChange = (e) => {\n    this.setState({person: e.target.value})\n  }\n\n  handlePersonSelect = (e) => {\n    this.setState({originalPerson: e.target.value})\n  }\n\n  handlePersonEdit = () => {\n    this.props.onPersonEdit({\n      name: this.state.person, \n      originalName: this.state.originalPerson})\n    this.setState({person: \"\", originalPerson: \"\"})    \n  }\n\n  handlePersonDelete = () => {\n    this.props.onPersonDelete({name: this.state.originalPerson})\n    this.setState({ originalPerson: \"\" })\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isPersonSelect', (value) => {\n        debugger\n        if (value && this.state.originalPerson === \"\") {\n            return false;\n        }\n        return true;\n    });\n  }\n\n  render() {   \n    return (\n      <ValidatorForm                \n              ref=\"form\"\n              onSubmit={this.handlePersonEdit}\n              onError={errors => console.log(errors)} >\n        <Grid container direction=\"column\">\n          <Grid item lg>\n            <PeopleMenu \n              peopleList={this.props.peopleList}\n              onPersonSelect={this.handlePersonSelect}\n              personSelect={this.state.originalPerson}/>\n          </Grid> \n          <Grid item lg>\n            <TextValidator\n              name=\"person\"\n              type=\"text\" \n              required={true}\n              value={this.state.person}\n              onChange={this.handlePersonChange}\n              label=\"Edit person name\"\n              margin=\"normal\"\n              id=\"person-edit\"\n              validators={['isPersonSelect', 'required']}\n              errorMessages={['you must select a person','this field is required']} />\n          </Grid>  \n          <Grid item lg>\n            <Button \n              color=\"primary\" \n              variant=\"contained\" \n              type=\"submit\" \n              style={{marginRight: 10}}>\n                Save\n            </Button>\n            <Button \n              color=\"secondary\" \n              variant=\"contained\" \n              onClick={this.handlePersonDelete} \n              style={{marginLeft: 10}}>\n                Delete Person\n            </Button>\n          </Grid>          \n        </Grid>\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default ModifyPerson","import React, { Component } from 'react'\nimport CreatePerson from '../components/CreatePerson';\nimport {Tab, Tabs, Typography} from '@material-ui/core';\nimport SwipeableViews from 'react-swipeable-views';\nimport ModifyPerson from '../components/ModifyPerson';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nexport class PersonContainer extends Component {\n  \n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      value: 0\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };  \n \n  render() {\n    \n    return (\n      <div style={{padding: 0, margin: 0}}>\n        <div>\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            fullWidth>\n            <Tab label=\"Add Person\" />\n            <Tab label=\"Modify Person\" />\n          </Tabs>\n        </div>\n        <SwipeableViews\n          axis='x'\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}>\n          <TabContainer dir='x'>\n            <CreatePerson \n              onPersonCreate={this.props.onPersonCreate} \n              companyList={this.props.companyList} />          \n          </TabContainer>\n          <TabContainer dir='x'>\n            <ModifyPerson \n              onPersonEdit={this.props.onPersonEdit}\n              onPersonDelete={this.props.onPersonDelete} \n              peopleList={this.props.peopleList} />               \n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    )\n  }\n}\n\nexport default PersonContainer\n\n\n\n \n","import React, { Component } from 'react'\nimport {Table, TableHead, TableCell, TableBody, TableRow, Button} from '@material-ui/core'\n\nexport default class PeopleTable extends Component {\n\n  render() {\n\n    return (\n      <Table >\n        <TableHead>\n        <TableRow>\n            <TableCell>Person</TableCell>\n            <TableCell>Company</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {this.props.people.map(row => {\n            if (row.company === \"\") {\n              return (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"  \n                    onClick={() => this.props.onPersonSelect(row.name)}>\n                    Add a company\n                  </Button>\n                </TableCell>\n              </TableRow>\n              )\n            } else {\n              return (\n                <TableRow key={row.name} >\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.name}\n                  </TableCell>\n                  <TableCell>{row.company}</TableCell>\n                </TableRow>\n              )\n            }\n          })}\n        </TableBody>\n      </Table>    \n      )\n  }\n}\n","import React, { Component } from 'react'\nimport { Typography, Grid, Button } from '@material-ui/core';\nimport PeopleTable from './PeopleTable'\nimport CompanyMenu from './CompanyMenu'\n\nexport class AssignmentList extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      view: 0,\n      company: \"\",\n      person: \"\"\n    }\n    this.handleCompanyAssign = this.handleCompanyAssign.bind(this)\n  }\n\n  handlePersonSelect = person => {\n    this.setState({ person: person, view: 1})\n  };\n\n  handleViewSelect = () => {    \n    this.setState({view: 0})\n  }\n\n  handleCompanySelect = e => {\n    this.setState({company: e.target.value})\n  }\n\n  handleCompanyAssign = () => {\n    this.props.onCompanyAssign({name: this.state.person, company: this.state.company})\n    this.setState({view: 0, person: \"\", company: \"\"})   \n  }\n \n\n  render() {\n    const unAssignedPeople = this.props.people.filter(person => person.company === \"\")\n\n    if (this.state.view === 0) {\n      return ( \n        <Grid container direction=\"column\">\n          <Grid item lg>\n            <PeopleTable \n              people={unAssignedPeople} \n              onCompanyChange={this.handleCompanySelect} \n              companyList={this.props.companyList}\n              companyInput={this.state.company}\n              onPersonSelect={this.handlePersonSelect}\n              />\n            </Grid>\n        </Grid>\n      )\n    } else {\n      return ( \n        <Grid container direction=\"column\">\n          <Grid item lg>\n            <Typography \n              variant=\"h5\" \n              className=\"cr-heading\">\n                {this.state.person}\n            </Typography>\n          </Grid>\n          <Grid item lg>\n            <CompanyMenu \n              companyList={this.props.companyList} \n              onCompanySelect={this.handleCompanySelect} \n              companySelect={this.state.company}/>\n          </Grid> \n          <Grid item lg>\n            <Button \n              variant=\"contained\" \n              color=\"primary\" \n              className=\"cr-button-primary\" \n              onClick={this.handleCompanyAssign}>\n                Save\n              </Button>\n            </Grid>\n        </Grid>\n      )\n    }\n  }\n}\n\nexport default AssignmentList","import React, { Component } from 'react'\nimport {Tab, Tabs, Typography} from '@material-ui/core';\nimport SwipeableViews from 'react-swipeable-views';\nimport PeopleTable from './PeopleTable'\nimport AssignmentList from './AssignmentList';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nexport class PeopleList extends Component {\n\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      value: 0\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };  \n\n  render() {    \n    const assignedPeople = this.props.people.filter(person => person.company !== \"\")\n    return (\n      <div style={{padding: 0}}>\n        <div>\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            fullWidth>\n            <Tab label=\"Assigned People\" />\n            <Tab label=\"Unassigned People\" />\n          </Tabs>\n        </div>\n        <SwipeableViews\n          axis='x'\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}>\n          <TabContainer dir='x'>\n            <PeopleTable people={assignedPeople} />   \n          </TabContainer>\n          <TabContainer dir='x'>\n          <AssignmentList \n              people={this.props.people}\n              onCompanyAssign={this.props.onCompanyAssign}\n              companyList = {this.props.companyList} />\n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    )\n  }\n}\n\nexport default PeopleList\n\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport { Typography, AppBar, Toolbar} from '@material-ui/core'\n\nexport class CrAppBar extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n      <Toolbar>\n        <Typography variant=\"h5\" color=\"inherit\">\n          {this.props.title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n    )\n  }\n}\n\nexport default CrAppBar","import React, { Component } from 'react'\nimport {Typography, Grid, Button} from '@material-ui/core/'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nexport class CreateCompany extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {      \n      company: \"\"\n    }\n    this.handleCompanyCreate = this.handleCompanyCreate.bind(this)\n    this.handleCompanyChange = this.handleCompanyChange.bind(this)\n  } \n  \n  handleCompanyChange = (e) => {\n    this.setState({company: e.target.value})\n  }\n\n  handleCompanyCreate = () =>{\n    this.props.onCompanyCreate(this.state.company)\n    this.setState({company: \"\"})\n  }\n\n  render() {\n    return (\n      <ValidatorForm                \n        ref=\"form\"\n        onSubmit={this.handleCompanyCreate}\n        onError={errors => console.log(errors)} >\n        <Grid container direction=\"column\">\n          <Grid item lg>\n            <Typography \n              variant=\"headline\" \n              className=\"cr-heading\">\n                Add Company\n            </Typography>\n          </Grid>\n          <Grid item lg>\n          <TextValidator\n            type=\"text\"\n            name=\"company\"\n            value={this.state.company}\n            onChange={this.handleCompanyChange}\n            required \n            label=\"Enter Company Name\" \n            placeholder=\"Company Name\" \n            id=\"company-name\" \n            margin=\"normal\" \n            validators={['required']}\n            errorMessages={['this field is required']}/>          \n          </Grid>\n          <Grid item lg>\n            <Button\n              type=\"submit\"\n              variant=\"contained\" \n              color=\"primary\" \n              className=\"cr-button-primary\">\n                Save\n            </Button>\n          </Grid>\n        </Grid>\n      </ValidatorForm>\n    )\n  }\n}\n\n\nexport default CreateCompany","import React, { Component } from 'react'\nimport CompanyMenu from './CompanyMenu'\nimport { Grid, Button} from '@material-ui/core'\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\n\nexport class ModifyCompany extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {      \n      company: \"\",\n      originalCompany: \"\"\n    }\n    this.handleCompanyEdit = this.handleCompanyEdit.bind(this)\n    this.handleCompanyChange = this.handleCompanyChange.bind(this)\n    this.handleCompanyDelete = this.handleCompanyDelete.bind(this)\n    this.handleCompanySelect = this.handleCompanySelect.bind(this)\n  }\n\n  handleCompanyChange = (e) => {\n    this.setState({company: e.target.value})\n  }\n\n  handleCompanySelect = (e) => {\n    this.setState({originalCompany: e.target.value})\n  }\n\n  handleCompanyEdit = () => {\n    this.props.onCompanyEdit({\n      name: this.state.company, \n      originalName: this.state.originalCompany})\n    this.setState({company: \"\", originalCompany: \"\"})   \n  }\n\n  handleCompanyDelete = () => {\n    this.props.onCompanyDelete({name: this.state.originalCompany})\n    this.setState({ originalCompany: \"\" })\n  }\n\n  componentDidMount() {\n    ValidatorForm.addValidationRule('isCompanySelect', (value) => {\n        debugger\n        if (value && this.state.originalCompany === \"\") {\n            return false;\n        }\n        return true;\n    });\n  }\n\n  render() {   \n    return (\n      <ValidatorForm                \n              ref=\"form\"\n              onSubmit={this.handleCompanyEdit}\n              onError={errors => console.log(errors)} >\n        <Grid container direction=\"column\">\n          <Grid item lg>\n            <CompanyMenu \n              companyList={this.props.companyList}\n              onCompanySelect={this.handleCompanySelect}\n              companySelect={this.state.originalCompany}/>\n          </Grid> \n          <Grid item lg>\n            <TextValidator\n              name=\"company\"\n              type=\"text\" \n              required={true}\n              value={this.state.company}\n              onChange={this.handleCompanyChange}\n              label=\"Edit Company name\"\n              margin=\"normal\"\n              id=\"company-edit\"\n              validators={['isCompanySelect', 'required']}\n              errorMessages={['you must select a company','this field is required']}/>\n          </Grid>  \n          <Grid item lg>\n            <Button \n              color=\"primary\" \n              variant=\"contained\" \n              type=\"submit\" \n              style={{marginRight: 10}}>\n                Save\n            </Button>\n            <Button \n              color=\"secondary\" \n              variant=\"contained\" \n              onClick={this.handleCompanyDelete} \n              style={{marginLeft: 10}}>\n                Delete Company\n            </Button>\n          </Grid>          \n        </Grid>\n      </ValidatorForm>\n    )\n  }\n}\n\nexport default ModifyCompany\n","import React, { Component } from 'react'\nimport {Tab, Tabs, Typography} from '@material-ui/core'\nimport SwipeableViews from 'react-swipeable-views'\nimport CreateCompany from '../components/CreateCompany'\nimport ModifyCompany from '../components/ModifyCompany'\n\nfunction TabContainer({ children, dir }) {\n\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nexport class CompanyContainer extends Component {\n  \n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      value: 0\n    }\n  }\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };  \n \n\n\n  render() {\n    return (\n      <div style={{padding: 0, margin: 0}}>\n        <div>\n          <Tabs\n            value={this.state.value}\n            onChange={this.handleChange}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            fullWidth>\n            <Tab label=\"Add Company\" />\n            <Tab label=\"Modify Company\" />\n          </Tabs>\n        </div>\n        <SwipeableViews\n          axis='x'\n          index={this.state.value}\n          onChangeIndex={this.handleChangeIndex}>\n          <TabContainer dir='x'>\n            <CreateCompany \n              onCompanyCreate={this.props.onCompanyCreate} />\n          </TabContainer>\n          <TabContainer dir='x'>\n            <ModifyCompany \n              onCompanyEdit={this.props.onCompanyEdit}\n              onCompanyDelete={this.props.onCompanyDelete} \n              companyList={this.props.companyList} />               \n          </TabContainer>\n        </SwipeableViews>\n      </div>\n    )\n  }\n}\n\nexport default CompanyContainer\n","import React, { Component } from 'react'\nimport { ListContainer } from './ListContainer'\nimport { PersonContainer } from './PersonContainer'\nimport { PeopleList } from '../components/PeopleList'\nimport { CrAppBar } from '../components/CrAppBar'\nimport { Paper, MenuItem } from '@material-ui/core'\nimport CompanyContainer from './CompanyContainer';\n\nexport class FormsContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      people: [\n        {name: \"Robin Börjesson\", company: \"Volvo\" },\n        {name: \"Sixten Börjesson\", company: \"Saab\" }\n      ],\n      companies: [\"Volvo\", \"Saab\"]\n    }\n    this.handleCompanyCreate = this.handleCompanyCreate.bind(this)\n    this.handlePersonCreate = this.handlePersonCreate.bind(this)\n    this.handleEmployeeDelete = this.handleEmployeeDelete.bind(this)\n    this.handleCompanyAssign = this.handleCompanyAssign.bind(this)\n    this.handlePersonEdit = this.handlePersonEdit.bind(this)\n    this.handlePersonDelete = this.handlePersonDelete.bind(this)\n    this.handleCompanyDelete = this.handleCompanyDelete.bind(this)\n    this.handleCompanyEdit = this.handleCompanyEdit.bind(this)\n  }\n\n  handleCompanyCreate = e => {\n    this.setState({ companies: [...this.state.companies, e] })\n  }\n\n  handlePersonCreate = newPeopleEntry => {\n    this.setState({ people: [...this.state.people, newPeopleEntry]})\n  }\n\n  handleEmployeeDelete = person => {\n    const peopleArray = this.state.people.map( e => {\n      if (e === person) {\n        e.company = \"\"\n        return e\n      } else {\n        return e\n      }\n    })\n    this.setState({people: peopleArray})\n  }\n\n  handleCompanyAssign = person => {\n    const peopleArray = this.state.people.map( e => {\n      if (e.name === person.name) {\n        e.company = person.company\n        return e\n      } else {\n        return e\n      }\n    })    \n    this.setState({people: peopleArray})\n  }\n\n  handlePersonEdit = person => {\n    const peopleArray = this.state.people.map( e => {\n      if (e.name === person.originalName) {        \n        e.name = person.name\n        return e\n      } else {\n        return e\n      }\n    })    \n    this.setState({people: peopleArray})\n  }\n\n  handlePersonDelete = person => {\n    const peopleArray = this.state.people.filter( e => e.name !== person.name)\n    this.setState({people: peopleArray})    \n  }\n\n  handleCompanyEdit = company => {\n    const peopleArray = this.state.people.map (e => {\n      if (e.company === company.originalName) {\n         e.company = company.name\n         return e\n      } else {\n        return e\n      }\n\n    })\n    const companyArray = this.state.companies.map( e=> {\n      return (e === company.originalName) ? company.name : e     \n    })\n    this.setState({companies: companyArray, people: peopleArray})\n  }\n\n  handleCompanyDelete = company => {\n    const peopleArray = this.state.people.map( e => {\n      if (e.company === company.name) {\n        e.company = \"\"\n        return e\n      } else {\n        return e\n      }\n    })\n    const companyArray = this.state.companies.filter( e => e !== company.name)\n    this.setState({companies: companyArray, people: peopleArray})\n  }\n\n  componentWillMount = () => {\n    localStorage.getItem('savedState') && this.setState({\n      people: JSON.parse(localStorage.getItem('savedState')).people,\n      companies: JSON.parse(localStorage.getItem('savedState')).companies\n    })\n  }\n\n  componentWillUpdate = (nextProps, nextState) => {\n    localStorage.setItem('savedState', JSON.stringify(nextState))    \n  }\n      \n  render() {\n    const companyList = this.state.companies.map((company) => {\n      return <MenuItem value={company} key={'menu-' + company}>{company}</MenuItem>\n    })\n\n    const peopleList = this.state.people.map((person) => {\n      return <MenuItem value={person.name} key={'menu-' + person.name}>{person.name}</MenuItem>\n    })\n\n    return (\n      <div >\n        <CrAppBar title=\"Company Registry\"/>\n        <Paper className=\"grid-container\">\n          <CompanyContainer \n            onCompanyCreate={this.handleCompanyCreate}\n            onCompanyEdit={this.handleCompanyEdit}\n            companyList={companyList}\n            onCompanyDelete={this.handleCompanyDelete} />\n          <ListContainer \n            companies={this.state.companies} \n            people={this.state.people} \n            onEmployeeDelete={this.handleEmployeeDelete}/>\n        </Paper>\n        <Paper className=\"grid-container\">\n          <PersonContainer \n            onPersonCreate={this.handlePersonCreate}\n            onPersonEdit={this.handlePersonEdit}\n            onPersonDelete={this.handlePersonDelete}           \n            companyList={companyList}\n            peopleList={peopleList}/>\n          <PeopleList \n            people={this.state.people}\n            onCompanyAssign={this.handleCompanyAssign}\n            companyList={companyList}\n            />\n        </Paper>\n      </div>\n    )\n  }\n}\n\nexport default FormsContainer\n","import React, { Component } from 'react';\nimport './App.css';\nimport FormsContainer from './containers/FormsContainer';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FormsContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}